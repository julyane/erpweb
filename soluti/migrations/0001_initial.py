# -*- coding: utf-8 -*-
from __future__ import unicode_literals

from django.db import migrations, models
import datetime
import djangoplus.db.models.fields


class Migration(migrations.Migration):

    dependencies = [
        ('site', '0002_auto_20151220_2033'),
    ]

    operations = [
        migrations.CreateModel(
            name='Administrador',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('nome', djangoplus.db.models.fields.CharField(max_length=255, verbose_name='Nome')),
                ('cpf', djangoplus.db.models.fields.CpfField(max_length=255, verbose_name='CPF')),
            ],
            options={
                'unit_field': 'empresa',
                'menu': ('Administra\xe7\xe3o::Usu\xe1rios::Administradores', 'fa-user'),
                'list_display': ['nome', 'cpf', 'empresa'],
                'verbose_name_plural': 'Administradores',
                'username_field': 'cpf',
                'can_admin': ['Administrador'],
                'verbose_name': 'Administrador',
            },
        ),
        migrations.CreateModel(
            name='Administrativo',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('nome', djangoplus.db.models.fields.CharField(max_length=255, verbose_name='Nome')),
                ('cpf', djangoplus.db.models.fields.CpfField(max_length=255, verbose_name='CPF')),
            ],
            options={
                'unit_field': 'empresa',
                'menu': 'Administra\xe7\xe3o::Usu\xe1rios::Administrativos',
                'list_display': ['nome', 'cpf', 'empresa'],
                'verbose_name_plural': 'Administrativo',
                'username_field': 'cpf',
                'can_admin': ['Administrador'],
                'verbose_name': 'Administrativo',
            },
        ),
        migrations.CreateModel(
            name='AlertaLead',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('data', djangoplus.db.models.fields.DateField(verbose_name='Data')),
            ],
            options={
                'ordering': ('data',),
                'can_admin': ['Administrador', 'Gerente'],
                'verbose_name': 'Alerta para Contato',
                'can_list': ['Atendente', 'Vendedor'],
                'verbose_name_plural': 'Alertas para Contato',
            },
        ),
        migrations.CreateModel(
            name='AliquotaICMS',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('descricao', djangoplus.db.models.fields.CharField(max_length=255, verbose_name='Descri\xe7\xe3o')),
                ('valor', djangoplus.db.models.fields.PositiveIntegerField(help_text='Em %')),
            ],
            options={
                'ordering': ['descricao'],
                'menu': ('Fiscal::Al\xedquotas de ICMS', 'fa-percent'),
                'verbose_name': 'Al\xedquota de ICMS',
                'verbose_name_plural': 'Al\xedquotas de ICMS',
            },
        ),
        migrations.CreateModel(
            name='AliquotaIPI',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('descricao', djangoplus.db.models.fields.CharField(max_length=255, verbose_name='Descri\xe7\xe3o')),
                ('valor', djangoplus.db.models.fields.PositiveIntegerField(help_text='Em %')),
            ],
            options={
                'ordering': ['descricao'],
                'menu': 'Fiscal::Al\xedquotas de IPI',
                'verbose_name': 'Al\xedquota de IPI',
                'verbose_name_plural': 'Al\xedquotas de IPI',
            },
        ),
        migrations.CreateModel(
            name='AnexoCliente',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('anexo', djangoplus.db.models.fields.FileField(upload_to=b'')),
            ],
            options={
                'can_admin': ['Administrador', 'Gerente'],
                'verbose_name': 'Anexo do Cliente',
                'can_list': ['Atendente'],
                'verbose_name_plural': 'Anexos do Cliente',
            },
        ),
        migrations.CreateModel(
            name='Atendente',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('nome', djangoplus.db.models.fields.CharField(max_length=255, verbose_name='Nome')),
                ('cpf', djangoplus.db.models.fields.CpfField(max_length=255, verbose_name='CPF')),
            ],
            options={
                'unit_field': 'empresa',
                'menu': 'Administra\xe7\xe3o::Usu\xe1rios::Atendentes',
                'list_display': ['nome', 'cpf', 'empresa'],
                'verbose_name_plural': 'Atendentes',
                'username_field': 'cpf',
                'can_admin': ['Administrador'],
                'verbose_name': 'Atendente',
            },
        ),
        migrations.CreateModel(
            name='Atividade',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('descricao', djangoplus.db.models.fields.CharField(unique=True, max_length=255, verbose_name='Descri\xe7\xe3o')),
            ],
            options={
                'ordering': ('descricao',),
                'menu': 'Vendas::Atividades',
                'can_admin': ['Administrador'],
                'verbose_name': 'Atividade',
                'verbose_name_plural': 'Atividades',
            },
        ),
        migrations.CreateModel(
            name='Cargo',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('descricao', djangoplus.db.models.fields.CharField(unique=True, max_length=255, verbose_name='Descri\xe7\xe3o')),
            ],
            options={
                'ordering': ('descricao',),
                'menu': 'Recursos Humanos::Cargos',
                'can_admin': ['Administrador'],
                'verbose_name': 'Cargo',
                'verbose_name_plural': 'Cargos',
            },
        ),
        migrations.CreateModel(
            name='CFOP',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('descricao', djangoplus.db.models.fields.CharField(max_length=255, verbose_name='Descri\xe7\xe3o')),
                ('valor', djangoplus.db.models.fields.PositiveIntegerField()),
            ],
            options={
                'ordering': ['descricao'],
                'menu': 'Fiscal::CFOP',
                'verbose_name': 'CFOP',
                'verbose_name_plural': 'CFOP',
            },
        ),
        migrations.CreateModel(
            name='Cidade',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('nome', djangoplus.db.models.fields.CharField(unique=True, max_length=255, verbose_name='Nome')),
            ],
            options={
                'ordering': ('nome',),
                'menu': 'Cadastros::Cidades',
                'can_admin': ['Administrador'],
                'verbose_name': 'Cidade',
                'verbose_name_plural': 'Cidades',
            },
        ),
        migrations.CreateModel(
            name='Cliente',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('nome', djangoplus.db.models.fields.CharField(max_length=255, verbose_name='Nome/Raz\xe3o Social')),
                ('cliente_desde', djangoplus.db.models.fields.DateField(default=datetime.date.today, verbose_name='Cliente desde')),
                ('nome_responsavel', djangoplus.db.models.fields.CharField(max_length=255, verbose_name='Nome do Respons\xe1vel')),
                ('eh_pessoa_fisica', djangoplus.db.models.fields.BooleanField(default=False, verbose_name='\xc9 Pessoa F\xedsica?')),
                ('cpf', djangoplus.db.models.fields.CpfField(max_length=255, verbose_name='CPF', blank=True)),
                ('rg', djangoplus.db.models.fields.CharField(max_length=255, verbose_name='RG', blank=True)),
                ('nascimento', djangoplus.db.models.fields.DateField(null=True, verbose_name='Data de Nascimento', blank=True)),
                ('nome_fantasia', djangoplus.db.models.fields.CharField(max_length=255, verbose_name='Nome Fantasia', blank=True)),
                ('cnpj', djangoplus.db.models.fields.CnpjField(max_length=255, verbose_name='CNPJ', blank=True)),
                ('isentoinscricaoestadual', djangoplus.db.models.fields.BooleanField(default=False, verbose_name='Isento de Inscri\xe7\xe3o Estadual')),
                ('inscricaoestadual', djangoplus.db.models.fields.CharField(max_length=8, verbose_name='Inscri\xe7\xe3o Estadual', blank=True)),
                ('inscricaomunicipal', djangoplus.db.models.fields.CharField(max_length=14, verbose_name='Inscri\xe7\xe3o Municipal', blank=True)),
                ('regime_tributario', djangoplus.db.models.fields.CharField(blank=True, max_length=255, verbose_name='Regime Tribut\xe1rio', choices=[('Simples Nacional', 'Simples Nacional'), ('Lucro Presumido', 'Lucro Presumido'), ('Lucro Real', 'Lucro Real')])),
                ('data_fundacao', djangoplus.db.models.fields.DateField(null=True, verbose_name='Data de Funda\xe7\xe3o', blank=True)),
                ('endereco', djangoplus.db.models.fields.AddressField(max_length=255, verbose_name='Endere\xe7o')),
                ('complemento', djangoplus.db.models.fields.CharField(max_length=255, verbose_name='Complemento', blank=True)),
                ('pontoreferencia', djangoplus.db.models.fields.CharField(max_length=255, verbose_name='Ponto de Refer\xeancia', blank=True)),
                ('bairro', djangoplus.db.models.fields.CharField(max_length=255, verbose_name='Bairro')),
                ('cep', djangoplus.db.models.fields.CepField(max_length=255, verbose_name='CEP')),
                ('cobranca_copiar_endereco', djangoplus.db.models.fields.BooleanField(default=False, verbose_name='Utilizar os dados do Endere\xe7o Principal?')),
                ('endereco_cobranca', djangoplus.db.models.fields.AddressField(max_length=255, verbose_name='Endere\xe7o', blank=True)),
                ('complemento_cobranca', djangoplus.db.models.fields.CharField(max_length=255, verbose_name='Complemento', blank=True)),
                ('pontoreferencia_cobranca', djangoplus.db.models.fields.CharField(max_length=255, verbose_name='Ponto de Refer\xeancia', blank=True)),
                ('bairro_cobranca', djangoplus.db.models.fields.CharField(max_length=255, verbose_name='Bairro', blank=True)),
                ('cep_cobranca', djangoplus.db.models.fields.CepField(max_length=255, verbose_name='CEP', blank=True)),
                ('entrega_copiar_endereco', djangoplus.db.models.fields.BooleanField(default=False, verbose_name='Utilizar os dados do Endere\xe7o Principal?')),
                ('endereco_entrega', djangoplus.db.models.fields.AddressField(max_length=255, verbose_name='Endere\xe7o', blank=True)),
                ('complemento_entrega', djangoplus.db.models.fields.CharField(max_length=255, verbose_name='Complemento', blank=True)),
                ('pontoreferencia_entrega', djangoplus.db.models.fields.CharField(max_length=255, verbose_name='Ponto de Refer\xeancia', blank=True)),
                ('bairro_entrega', djangoplus.db.models.fields.CharField(max_length=255, verbose_name='Bairro', blank=True)),
                ('cep_entrega', djangoplus.db.models.fields.CepField(max_length=255, verbose_name='CEP', blank=True)),
                ('telefone', djangoplus.db.models.fields.PhoneField(max_length=255, verbose_name='Telefone')),
                ('telefone2', djangoplus.db.models.fields.PhoneField(max_length=255, verbose_name='Outro Telefone', blank=True)),
                ('celular', djangoplus.db.models.fields.PhoneField9(max_length=255, verbose_name='Celular', blank=True)),
                ('email', djangoplus.db.models.fields.EmailField(max_length=255, verbose_name='E-mail')),
                ('email_fiscal', djangoplus.db.models.fields.EmailField(max_length=255, null=True, verbose_name='E-mail Fiscal', blank=True)),
                ('site', djangoplus.db.models.fields.CharField(max_length=255, null=True, verbose_name='Site', blank=True)),
                ('procedencia', djangoplus.db.models.fields.CharField(blank=True, max_length=100, verbose_name='Proced\xeancia', choices=[('Internet', 'Internet'), ('Facebook', 'Facebook'), ('M\xeddia de rua', 'M\xeddia de rua'), ('Outros', 'Outros')])),
                ('credito', djangoplus.db.models.fields.DecimalField(null=True, verbose_name='Cr\xe9dito', max_digits=9, decimal_places=2)),
                ('ativo', djangoplus.db.models.fields.BooleanField(default=True, verbose_name='Ativo')),
                ('classificacao', djangoplus.db.models.fields.CharField(default='Verde', max_length=100, verbose_name='Classifica\xe7\xe3o', choices=[('Verde', 'Verde'), ('Amarelo', 'Amarelo'), ('Vermelho', 'Vermelho')])),
                ('observacao', djangoplus.db.models.fields.TextField(null=True, verbose_name='Observa\xe7\xf5es', blank=True)),
                ('data_cadastro', djangoplus.db.models.fields.DateField(auto_now_add=True, verbose_name='Data de Cadastro')),
                ('atividade', djangoplus.db.models.fields.ModelChoiceField(to='soluti.Atividade')),
                ('cidade', djangoplus.db.models.fields.ModelChoiceField(related_name='cidade_cliente', to='soluti.Cidade')),
                ('cidade_cobranca', djangoplus.db.models.fields.ModelChoiceField(related_name='cidade_cobranca', verbose_name='Cidade', blank=True, to='soluti.Cidade', null=True)),
                ('cidade_entrega', djangoplus.db.models.fields.ModelChoiceField(related_name='cidade_entrega', verbose_name='Cidade', blank=True, to='soluti.Cidade', null=True)),
            ],
            options={
                'ordering': ('nome',),
                'menu': 'Vendas::Clientes',
                'list_display': ['id', 'nome', 'credito', 'vendedor'],
                'can_list': ['Atendente', 'Vendedor'],
                'verbose_name_plural': 'Clientes',
                'can_admin': ['Administrador', 'Gerente'],
                'verbose_name': 'Cliente',
            },
        ),
        migrations.CreateModel(
            name='ClienteRevenda',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('nome', djangoplus.db.models.fields.CharField(max_length=255)),
                ('cnpj', djangoplus.db.models.fields.CnpjField(max_length=255, verbose_name='CNPJ', blank=True)),
                ('telefone', djangoplus.db.models.fields.PhoneField(max_length=255)),
                ('email', djangoplus.db.models.fields.EmailField(max_length=255, verbose_name='E-mail')),
                ('ativo', djangoplus.db.models.fields.BooleanField(default=True, verbose_name='Ativo')),
            ],
            options={
                'unit_field': 'empresa',
                'ordering': ('nome',),
                'menu': 'Vendas::Clientes de Revendas',
                'list_display': ['nome', 'cnpj', 'telefone', 'email', 'ativo'],
                'verbose_name_plural': 'Clientes de Revendas',
                'can_admin': ['Administrador'],
                'verbose_name': 'Cliente de Revenda',
            },
        ),
        migrations.CreateModel(
            name='Colaborador',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('nome', djangoplus.db.models.fields.CharField(max_length=255)),
                ('sexo', djangoplus.db.models.fields.CharField(max_length=255, verbose_name='Sexo', choices=[('Masculino', 'Masculino'), ('Feminino', 'Feminino')])),
                ('nascimento', djangoplus.db.models.fields.DateField(verbose_name='Data de Nascimento')),
                ('data_admissao', djangoplus.db.models.fields.DateField(verbose_name='Data de Admiss\xe3o')),
                ('data_demissao', djangoplus.db.models.fields.DateField(null=True, verbose_name='Data de Demiss\xe3o', blank=True)),
                ('endereco', djangoplus.db.models.fields.AddressField(max_length=255, verbose_name='Endere\xe7o')),
                ('complemento', djangoplus.db.models.fields.CharField(max_length=255, verbose_name='Complemento')),
                ('pontoreferencia', djangoplus.db.models.fields.CharField(max_length=255, verbose_name='Ponto de Refer\xeancia')),
                ('bairro', djangoplus.db.models.fields.CharField(max_length=255, verbose_name='Bairro')),
                ('cep', djangoplus.db.models.fields.CepField(max_length=255, verbose_name='CEP')),
                ('telefone', djangoplus.db.models.fields.PhoneField(max_length=255, verbose_name='Telefone')),
                ('celular', djangoplus.db.models.fields.PhoneField9(max_length=255, null=True, verbose_name='Celular', blank=True)),
                ('email', djangoplus.db.models.fields.EmailField(max_length=255, verbose_name='E-mail')),
                ('cpf', djangoplus.db.models.fields.CpfField(max_length=255, verbose_name='CPF', blank=True)),
                ('rg', djangoplus.db.models.fields.CharField(max_length=255, verbose_name='RG', blank=True)),
                ('ctps', djangoplus.db.models.fields.CharField(max_length=255, verbose_name='CTPS', blank=True)),
                ('serie_ctps', djangoplus.db.models.fields.CharField(max_length=255, verbose_name='S\xe9rie CTPS', blank=True)),
                ('pis_pasep', djangoplus.db.models.fields.CharField(max_length=255, verbose_name='PIS/PASEP', blank=True)),
                ('titulo_eleitor', djangoplus.db.models.fields.CharField(max_length=255, verbose_name='T\xedtulo de Eleitor', blank=True)),
                ('zona_eleitoral', djangoplus.db.models.fields.CharField(max_length=255, verbose_name='Zona Eleitoral', blank=True)),
                ('categoria_cnh', djangoplus.db.models.fields.CharField(max_length=255, verbose_name='Categoria CNH', choices=[('N\xe3o possui habilita\xe7\xe3o', 'N\xe3o possui habilita\xe7\xe3o'), ('A', 'A'), ('B', 'B'), ('AB', 'AB'), ('C', 'C'), ('AC', 'AC'), ('D', 'D'), ('AD', 'AD'), ('E', 'E'), ('AE', 'AE')])),
                ('ativo', djangoplus.db.models.fields.BooleanField(default=True, verbose_name='Ativo')),
                ('observacao', djangoplus.db.models.fields.TextField(null=True, verbose_name='Observa\xe7\xe3o', blank=True)),
                ('data_cadastro', djangoplus.db.models.fields.DateField(auto_now_add=True, verbose_name='Data de Cadastro')),
                ('cidade', djangoplus.db.models.fields.ModelChoiceField(to='soluti.Cidade')),
            ],
            options={
                'ordering': ('nome',),
                'menu': ('Recursos Humanos::Colaboradores', 'fa-users'),
                'list_display': ['id', 'nome', 'cpf', 'rg', 'telefone'],
                'verbose_name_plural': 'Colaboradores',
                'can_admin': ['Administrador'],
                'verbose_name': 'Colaborador',
            },
        ),
        migrations.CreateModel(
            name='Compra',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('numero_nfe', djangoplus.db.models.fields.CharField(max_length=255, verbose_name='N\xfamero da Nota Fiscal')),
                ('data_compra', djangoplus.db.models.fields.DateTimeField(default=datetime.datetime.today, verbose_name='Data da Compra')),
                ('data_entrega', djangoplus.db.models.fields.DateTimeField(default=datetime.datetime.today, verbose_name='Data da Entrega')),
                ('entregue', djangoplus.db.models.fields.BooleanField(default=False)),
                ('faturada', djangoplus.db.models.fields.BooleanField(default=False)),
                ('desconto', djangoplus.db.models.fields.DecimalField(max_digits=9, decimal_places=2, blank=True)),
                ('frete', djangoplus.db.models.fields.DecimalField(max_digits=9, decimal_places=2, blank=True)),
                ('adicionais', djangoplus.db.models.fields.DecimalField(max_digits=9, decimal_places=2, blank=True)),
                ('parcelas', djangoplus.db.models.fields.PositiveIntegerField()),
                ('observacoes', djangoplus.db.models.fields.TextField(null=True, verbose_name='Observa\xe7\xf5es', blank=True)),
            ],
            options={
                'ordering': ('data_compra',),
                'menu': ('Compras::Compras', 'fa-inbox'),
                'list_display': ['data_compra', 'fornecedor', 'numero_nfe', 'data_entrega', 'entregue', 'faturada', 'get_total'],
                'verbose_name_plural': 'Compras',
                'can_admin': ['Administrador'],
                'verbose_name': 'Compra',
            },
        ),
        migrations.CreateModel(
            name='CompraProduto',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('quantidade', djangoplus.db.models.fields.PositiveIntegerField()),
                ('valor', djangoplus.db.models.fields.DecimalField(verbose_name='Valor Total', max_digits=9, decimal_places=2)),
                ('compra', djangoplus.db.models.fields.ModelChoiceField(to='soluti.Compra')),
            ],
            options={
                'can_admin': ['Administrador'],
                'verbose_name': 'Produto',
                'list_display': ['produto', 'quantidade', 'valor'],
                'verbose_name_plural': 'Produtos',
            },
        ),
        migrations.CreateModel(
            name='ContatoCliente',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('nome', djangoplus.db.models.fields.CharField(max_length=255, verbose_name='Nome')),
                ('telefone', djangoplus.db.models.fields.PhoneField(max_length=255, verbose_name='Telefone')),
                ('celular', djangoplus.db.models.fields.PhoneField9(max_length=255, verbose_name='Celular', blank=True)),
                ('email', djangoplus.db.models.fields.EmailField(max_length=255, verbose_name='E-mail', blank=True)),
                ('data_aniversario', djangoplus.db.models.fields.DateField(verbose_name='Data de Anivers\xe1rio')),
                ('observacao', djangoplus.db.models.fields.TextField(verbose_name='Observa\xe7\xf5es', blank=True)),
                ('cargo', djangoplus.db.models.fields.ModelChoiceField(to='soluti.Cargo')),
                ('cliente', djangoplus.db.models.fields.ModelChoiceField(to='soluti.Cliente')),
            ],
            options={
                'ordering': ('nome',),
                'can_admin': ['Administrador', 'Gerente'],
                'verbose_name': 'Contato do Cliente',
                'can_list': ['Atendente'],
                'verbose_name_plural': 'Contatos do Cliente',
            },
        ),
        migrations.CreateModel(
            name='Contrato',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('tipo_contrato', djangoplus.db.models.fields.CharField(max_length=255, verbose_name='Tipo de Contrato', choices=[('Contrato de Licen\xe7a de Software', 'Contrato de Licen\xe7a de Software'), ('Contrato de Manuten\xe7\xe3o de Equipamentos', 'Contrato de Manuten\xe7\xe3o de Equipamentos'), ('Contrato de Loca\xe7\xe3o de Equipamentos', 'Contrato de Loca\xe7\xe3o de Equipamentos')])),
                ('data_inicio', djangoplus.db.models.fields.DateField(verbose_name='Data de In\xedcio')),
                ('data_fim', djangoplus.db.models.fields.DateField(verbose_name='Data de Fim')),
                ('parcelas', djangoplus.db.models.fields.PositiveIntegerField()),
                ('vencimento', djangoplus.db.models.fields.DateField(verbose_name='Primeiro Vencimento')),
                ('anexo', djangoplus.db.models.fields.FileField(null=True, upload_to=b'', blank=True)),
                ('cancelado', djangoplus.db.models.fields.BooleanField(default=False, verbose_name='Cancelado?')),
                ('faturado', djangoplus.db.models.fields.BooleanField(default=False)),
                ('observacoes', djangoplus.db.models.fields.TextField(null=True, verbose_name='Observa\xe7\xf5es', blank=True)),
                ('cliente', djangoplus.db.models.fields.ModelChoiceField(to='soluti.Cliente')),
            ],
            options={
                'ordering': ('data_inicio',),
                'menu': 'Assist\xeancia T\xe9cnica::Contratos',
                'list_display': ['cliente', 'tipo_contrato', 'data_inicio', 'data_fim', 'cancelado', 'faturado'],
                'verbose_name_plural': 'Contratos',
                'can_admin': ['Administrador', 'Gerente'],
                'verbose_name': 'Contrato',
            },
        ),
        migrations.CreateModel(
            name='ContratoServico',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('valor', djangoplus.db.models.fields.DecimalField(verbose_name='Valor Total', max_digits=9, decimal_places=2)),
                ('contrato', djangoplus.db.models.fields.ModelChoiceField(to='soluti.Contrato')),
            ],
            options={
                'can_admin': ['Administrador'],
                'verbose_name': 'Servi\xe7o',
                'list_display': ['servico', 'valor'],
                'verbose_name_plural': 'Servi\xe7os',
            },
        ),
        migrations.CreateModel(
            name='ControleSatisfacao',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('classificacao', djangoplus.db.models.fields.CharField(max_length=255, choices=[('Muito satisfeito', 'Muito satisfeito'), ('Razoavelmente satisfeito', 'Razoavelmente satisfeito'), ('Insatisfeito', 'Insatisfeito')])),
                ('data', djangoplus.db.models.fields.DateTimeField(default=datetime.datetime.today, verbose_name='Data/Hora')),
                ('comentario', djangoplus.db.models.fields.TextField(verbose_name='Coment\xe1rio', blank=True)),
                ('interessado', djangoplus.db.models.fields.CharField(max_length=255, verbose_name='Nome')),
                ('cargo_interessado', djangoplus.db.models.fields.CharField(max_length=255, verbose_name='Cargo')),
            ],
            options={
                'ordering': ('data',),
                'menu': 'Assist\xeancia T\xe9cnica::Controles de Satisfa\xe7\xe3o',
                'list_display': ['ticket', 'classificacao', 'data', 'comentario', 'get_interessado'],
                'can_list': ['Suporte'],
                'verbose_name_plural': 'Controles de Satisfa\xe7\xe3o',
                'can_admin': ['Administrador', 'Gerente'],
                'verbose_name': 'Controle de Satisfa\xe7\xe3o',
            },
        ),
        migrations.CreateModel(
            name='Despesa',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('categoria', djangoplus.db.models.fields.CharField(max_length=255, choices=[('Compras', 'Compras')])),
                ('data', djangoplus.db.models.fields.DateField()),
                ('descricao', djangoplus.db.models.fields.TextField(verbose_name='Descri\xe7\xe3o')),
                ('valor', djangoplus.db.models.fields.DecimalField(max_digits=9, decimal_places=2)),
                ('confirmada', djangoplus.db.models.fields.BooleanField(default=True, verbose_name='Paga')),
                ('compra', djangoplus.db.models.fields.ModelChoiceField(blank=True, to='soluti.Compra', null=True)),
            ],
            options={
                'unit_field': 'empresa',
                'ordering': ('data',),
                'menu': ('Financeiro::Despesas', 'fa-money'),
                'list_display': ['data', 'categoria', 'valor', 'descricao', 'confirmada'],
                'verbose_name_plural': 'Despesas',
                'can_admin': ['Administrador', 'Gerente'],
                'verbose_name': 'Despesa',
            },
        ),
        migrations.CreateModel(
            name='Empresa',
            fields=[
                ('unit_ptr', models.OneToOneField(parent_link=True, auto_created=True, primary_key=True, serialize=False, to='site.Unit')),
                ('nome', djangoplus.db.models.fields.CharField(max_length=255, verbose_name='Nome Fantasia')),
                ('razao_social', djangoplus.db.models.fields.CharField(max_length=255, verbose_name='Raz\xe3o Social')),
                ('cnpj', djangoplus.db.models.fields.CnpjField(max_length=255, verbose_name='CNPJ', blank=True)),
                ('isentoinscricaoestadual', djangoplus.db.models.fields.BooleanField(default=False, verbose_name='Isento de Inscri\xe7\xe3o Estadual')),
                ('inscricaoestadual', djangoplus.db.models.fields.CharField(max_length=8, verbose_name='Inscri\xe7\xe3o Estadual', blank=True)),
                ('inscricaomunicipal', djangoplus.db.models.fields.CharField(max_length=14, verbose_name='Inscri\xe7\xe3o Municipal', blank=True)),
                ('endereco', djangoplus.db.models.fields.AddressField(max_length=255, verbose_name='Endere\xe7o')),
                ('complemento', djangoplus.db.models.fields.CharField(max_length=255, verbose_name='Complemento', blank=True)),
                ('pontoreferencia', djangoplus.db.models.fields.CharField(max_length=255, verbose_name='Ponto de Refer\xeancia', blank=True)),
                ('bairro', djangoplus.db.models.fields.CharField(max_length=255, verbose_name='Bairro')),
                ('cep', djangoplus.db.models.fields.CepField(max_length=255, verbose_name='CEP')),
                ('telefone', djangoplus.db.models.fields.PhoneField(max_length=255, verbose_name='Telefone')),
                ('telefone2', djangoplus.db.models.fields.PhoneField(max_length=255, verbose_name='Outro Telefone', blank=True)),
                ('celular', djangoplus.db.models.fields.PhoneField9(max_length=255, verbose_name='Celular', blank=True)),
                ('email', djangoplus.db.models.fields.EmailField(max_length=255, verbose_name='E-mail')),
                ('cidade', djangoplus.db.models.fields.ModelChoiceField(to='soluti.Cidade')),
            ],
            options={
                'unit_lookup': 'id',
                'ordering': ('nome', 'cnpj', 'telefone'),
                'menu': 'Cadastros::Empresas',
                'verbose_name_plural': 'Empresas',
                'can_admin': ['Administrador'],
                'verbose_name': 'Empresa',
            },
            bases=('site.unit',),
        ),
        migrations.CreateModel(
            name='EmpresaConveniada',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('nome', djangoplus.db.models.fields.CharField(unique=True, max_length=255, verbose_name='Nome')),
            ],
            options={
                'ordering': ('nome',),
                'menu': 'Vendas::Empresas Conveniadas',
                'can_admin': ['Administrador'],
                'verbose_name': 'Empresa Conveniada',
                'verbose_name_plural': 'Empresas Conveniadas',
            },
        ),
        migrations.CreateModel(
            name='EntradaEstoque',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('quantidade', djangoplus.db.models.fields.PositiveIntegerField()),
                ('data_cadastro', djangoplus.db.models.fields.DateField(default=datetime.datetime.today, verbose_name='Data de Cadastro')),
                ('empresa', djangoplus.db.models.fields.ModelChoiceField(to='soluti.Empresa')),
            ],
            options={
                'unit_field': 'empresa',
                'ordering': ('data_cadastro',),
                'menu': 'Estoque::Entradas',
                'list_display': ['empresa', 'produto', 'quantidade', 'data_cadastro'],
                'verbose_name_plural': 'Entradas em Estoque',
                'can_admin': ['Administrador', 'Gerente'],
                'verbose_name': 'Entrada em Estoque',
            },
        ),
        migrations.CreateModel(
            name='Estado',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('nome', djangoplus.db.models.fields.CharField(unique=True, max_length=255, verbose_name='Nome')),
            ],
            options={
                'ordering': ('nome',),
                'menu': ('Cadastros::Estados', 'fa-list'),
                'can_admin': ['Administrador'],
                'verbose_name': 'Estado',
                'verbose_name_plural': 'Estados',
            },
        ),
        migrations.CreateModel(
            name='Fabricante',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('descricao', djangoplus.db.models.fields.CharField(max_length=255, verbose_name='Descri\xe7\xe3o')),
            ],
            options={
                'ordering': ['descricao'],
                'menu': 'Estoque::Fabricantes',
                'verbose_name': 'Fabricante',
                'verbose_name_plural': 'Fabricantes',
            },
        ),
        migrations.CreateModel(
            name='FormaPagamento',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('descricao', djangoplus.db.models.fields.CharField(unique=True, max_length=255, verbose_name='Descri\xe7\xe3o')),
            ],
            options={
                'ordering': ('descricao',),
                'menu': 'Vendas::Formas de Pagamento',
                'can_admin': ['Administrador'],
                'verbose_name': 'Forma de Pagamento',
                'verbose_name_plural': 'Formas de Pagamento',
            },
        ),
        migrations.CreateModel(
            name='Fornecedor',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('nome', djangoplus.db.models.fields.CharField(max_length=255, verbose_name='Nome')),
                ('eh_pessoa_fisica', djangoplus.db.models.fields.BooleanField(default=False, verbose_name='\xc9 Pessoa F\xedsica?')),
                ('cpf', djangoplus.db.models.fields.CpfField(max_length=255, verbose_name='CPF', blank=True)),
                ('rg', djangoplus.db.models.fields.CharField(max_length=255, verbose_name='RG', blank=True)),
                ('nome_fantasia', djangoplus.db.models.fields.CharField(max_length=255, verbose_name='Nome Fantasia', blank=True)),
                ('cnpj', djangoplus.db.models.fields.CnpjField(max_length=255, verbose_name='CNPJ', blank=True)),
                ('inscricaoestadual', djangoplus.db.models.fields.CharField(max_length=8, verbose_name='Inscri\xe7\xe3o Estadual', blank=True)),
                ('isentoinscricaoestadual', djangoplus.db.models.fields.BooleanField(default=False, verbose_name='Isento de Inscri\xe7\xe3o Estadual')),
                ('inscricaomunicipal', djangoplus.db.models.fields.CharField(max_length=14, verbose_name='Inscri\xe7\xe3o Municipal', blank=True)),
                ('endereco', djangoplus.db.models.fields.AddressField(max_length=255, verbose_name='Endere\xe7o')),
                ('complemento', djangoplus.db.models.fields.CharField(max_length=255, verbose_name='Complemento')),
                ('pontoreferencia', djangoplus.db.models.fields.CharField(max_length=255, verbose_name='Ponto de Refer\xeancia')),
                ('bairro', djangoplus.db.models.fields.CharField(max_length=255, verbose_name='Bairro')),
                ('cep', djangoplus.db.models.fields.CepField(max_length=255, verbose_name='CEP')),
                ('telefone', djangoplus.db.models.fields.PhoneField(max_length=255, verbose_name='Telefone')),
                ('celular', djangoplus.db.models.fields.PhoneField9(max_length=255, null=True, verbose_name='Celular', blank=True)),
                ('email', djangoplus.db.models.fields.EmailField(max_length=255, verbose_name='E-mail')),
                ('site', djangoplus.db.models.fields.CharField(max_length=255, null=True, verbose_name='Site', blank=True)),
                ('ativo', djangoplus.db.models.fields.BooleanField(default=True, verbose_name='Ativo')),
                ('observacao', djangoplus.db.models.fields.TextField(null=True, verbose_name='Observa\xe7\xe3o', blank=True)),
                ('data_cadastro', djangoplus.db.models.fields.DateField(auto_now_add=True, verbose_name='Data de Cadastro')),
                ('atividade', djangoplus.db.models.fields.ModelChoiceField(to='soluti.Atividade')),
                ('cidade', djangoplus.db.models.fields.ModelChoiceField(to='soluti.Cidade')),
                ('empresa', djangoplus.db.models.fields.ModelChoiceField(to='soluti.Empresa')),
                ('estado', djangoplus.db.models.fields.ModelChoiceField(to='soluti.Estado')),
            ],
            options={
                'unit_field': 'empresa',
                'ordering': ('nome',),
                'menu': 'Compras::Fornecedores',
                'list_display': ['id', 'nome', 'telefone'],
                'verbose_name_plural': 'Fornecedores',
                'can_admin': ['Administrador'],
                'verbose_name': 'Fornecedor',
            },
        ),
        migrations.CreateModel(
            name='Gerente',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('nome', djangoplus.db.models.fields.CharField(max_length=255, verbose_name='Nome')),
                ('cpf', djangoplus.db.models.fields.CpfField(max_length=255, verbose_name='CPF')),
                ('empresa', djangoplus.db.models.fields.ModelChoiceField(to='soluti.Empresa')),
            ],
            options={
                'unit_field': 'empresa',
                'menu': 'Administra\xe7\xe3o::Usu\xe1rios::Gerentes',
                'list_display': ['nome', 'cpf', 'empresa'],
                'verbose_name_plural': 'Gerentes',
                'username_field': 'cpf',
                'can_admin': ['Administrador'],
                'verbose_name': 'Gerente',
            },
        ),
        migrations.CreateModel(
            name='GrupoEconomico',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('descricao', djangoplus.db.models.fields.CharField(unique=True, max_length=255, verbose_name='Descri\xe7\xe3o')),
            ],
            options={
                'ordering': ('descricao',),
                'menu': 'Vendas::Grupos Econ\xf4micos',
                'can_admin': ['Administrador'],
                'verbose_name': 'Grupo Econ\xf4mico',
                'verbose_name_plural': 'Grupos Econ\xf4micos',
            },
        ),
        migrations.CreateModel(
            name='GrupoProduto',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('descricao', djangoplus.db.models.fields.CharField(unique=True, max_length=255, verbose_name='Descri\xe7\xe3o')),
            ],
            options={
                'ordering': ('descricao',),
                'menu': 'Estoque::Grupos de Produtos',
                'can_admin': ['Administrador'],
                'verbose_name': 'Grupo de Produtos',
                'verbose_name_plural': 'Grupos de Produtos',
            },
        ),
        migrations.CreateModel(
            name='InteracaoTicket',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('data', djangoplus.db.models.fields.DateTimeField(default=datetime.datetime.today, verbose_name='Data/Hora')),
                ('comentario', djangoplus.db.models.fields.TextField(verbose_name='Coment\xe1rio', blank=True)),
            ],
            options={
                'ordering': ('data',),
                'list_display': ['ticket', 'responsavel', 'data', 'comentario'],
                'can_list': ['Suporte'],
                'verbose_name_plural': 'Intera\xe7\xf5es',
                'can_admin': ['Administrador', 'Gerente'],
                'verbose_name': 'Intera\xe7\xe3o',
            },
        ),
        migrations.CreateModel(
            name='Lead',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('nome', djangoplus.db.models.fields.CharField(max_length=255, verbose_name='Nome do Contato')),
                ('nom_empresa', djangoplus.db.models.fields.CharField(max_length=255, verbose_name='Nome da Empresa')),
                ('cnpj', djangoplus.db.models.fields.CnpjField(max_length=255, unique=True, null=True, verbose_name='CNPJ', blank=True)),
                ('endereco', djangoplus.db.models.fields.TextField(null=True, verbose_name='Endere\xe7o', blank=True)),
                ('email', djangoplus.db.models.fields.EmailField(max_length=255, verbose_name='E-mail')),
                ('telefone', djangoplus.db.models.fields.PhoneField(max_length=255, verbose_name='Telefone')),
                ('celular', djangoplus.db.models.fields.PhoneField9(max_length=255, null=True, verbose_name='Celular', blank=True)),
                ('procedencia', djangoplus.db.models.fields.CharField(blank=True, max_length=100, verbose_name='Proced\xeancia', choices=[('Internet', 'Internet'), ('Facebook', 'Facebook'), ('M\xeddia de rua', 'M\xeddia de rua'), ('Outros', 'Outros')])),
                ('forma_contato', djangoplus.db.models.fields.CharField(blank=True, max_length=100, verbose_name='Forma de Contato', choices=[('Telemarketing ativo', 'Telemarketing ativo'), ('Telemarketing receptivo', 'Telemarketing receptivo'), ('Chat online', 'Chat online'), ('Site contato', 'Site contato')])),
                ('proposta_enviada', djangoplus.db.models.fields.BooleanField(default=False, verbose_name='Proposta enviada?')),
                ('status', djangoplus.db.models.fields.CharField(max_length=100, verbose_name='Status', choices=[('Em prospec\xe7\xe3o', 'Em prospec\xe7\xe3o'), ('Aguardando feedback', 'Aguardando feedback'), ('Aguardando fechamento', 'Aguardando fechamento'), ('Negado', 'Negado'), ('Fechado', 'Fechado')])),
                ('observacao', djangoplus.db.models.fields.TextField(verbose_name='Observa\xe7\xf5es', blank=True)),
                ('empresa', djangoplus.db.models.fields.ModelChoiceField(to='soluti.Empresa')),
            ],
            options={
                'unit_field': 'empresa',
                'ordering': ('empresa',),
                'menu': ('Vendas::Leads', 'fa-shopping-cart'),
                'list_display': ['id', 'empresa', 'nome', 'email', 'telefone', 'vendedor', 'status'],
                'can_list': ['Atendente', 'Vendedor'],
                'verbose_name_plural': 'Leads',
                'can_admin': ['Administrador', 'Gerente'],
                'verbose_name': 'Lead',
            },
        ),
        migrations.CreateModel(
            name='MotivoAlertaLead',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('descricao', djangoplus.db.models.fields.CharField(unique=True, max_length=255, verbose_name='Descri\xe7\xe3o')),
            ],
            options={
                'ordering': ('descricao',),
                'menu': 'Vendas::Motivos de Alerta de Lead',
                'can_admin': ['Administrador'],
                'verbose_name': 'Motivo de Alerta de Lead',
                'verbose_name_plural': 'Motivos de Alerta de Lead',
            },
        ),
        migrations.CreateModel(
            name='Produto',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('titulo', djangoplus.db.models.fields.CharField(unique=True, max_length=255, verbose_name='T\xedtulo')),
                ('descricao', djangoplus.db.models.fields.TextField(verbose_name='Descri\xe7\xe3o')),
                ('modelo', djangoplus.db.models.fields.CharField(max_length=255)),
                ('valor', djangoplus.db.models.fields.DecimalField(verbose_name='Pre\xe7o de Venda', max_digits=9, decimal_places=2)),
                ('preco_custo', djangoplus.db.models.fields.DecimalField(verbose_name='Pre\xe7o de Custo', max_digits=9, decimal_places=2, blank=True)),
                ('peso', djangoplus.db.models.fields.DecimalField(max_digits=9, decimal_places=2, blank=True)),
                ('estoque_atual', djangoplus.db.models.fields.PositiveIntegerField(verbose_name='Estoque Atual')),
                ('estoque_minimo', djangoplus.db.models.fields.PositiveIntegerField(verbose_name='Estoque M\xednimo')),
                ('ncm', djangoplus.db.models.fields.CharField(max_length=255, verbose_name='NCM')),
                ('cst_a', djangoplus.db.models.fields.CharField(blank=True, max_length=255, verbose_name='CST - Tabela A', choices=[('0', '0 \u2013 Nacional, exceto as indicadas nos c\xf3digos 3 a 5'), ('1', '1 \u2013 Estrangeira \u2013 importa\xe7\xe3o direta, exceto a indicada no c\xf3digo 6'), ('2', '2 \u2013 Estrangeira \u2013 adquirida no mercado interno, exceto a indicada no c\xf3digo 7'), ('3', '3 \u2013 Nacional, mercadoria ou bem com conte\xfado de importa\xe7\xe3o superior a 40% (quarenta por cento)'), ('4', '4 \u2013 Nacional, cuja produ\xe7\xe3o tenha sido feita em conformidade com os processos produtivos b\xe1sicos de que tratam o Decreto-Lei n\xba 288, de 28 de fevereiro de 1967, a Lei federal        n\xba 8.248, de 23 de outubro de 1991, a Lei federal n\xba 8.387, de 30 de dezembro de 1991, a Lei federal n\xba 10.176, de 11 de janeiro de 2001 e a Lei federal n\xba 11.484, de 31 de maio de 2007'), ('5', '5 \u2013 Nacional, mercadoria ou bem com conte\xfado de importa\xe7\xe3o inferior ou igual a 40% (quarenta por cento)'), ('6', '6 \u2013 Estrangeira \u2013 importa\xe7\xe3o direta, sem similar nacional, constante em lista de resolu\xe7\xe3o do Conselho de Ministros da C\xe2mara de Com\xe9rcio Exterior (CAMEX)'), ('7', '7 \u2013 Estrangeira \u2013 adquirida no mercado interno, sem similar nacional, constante em lista de resolu\xe7\xe3o do CAMEX')])),
                ('cst_b', djangoplus.db.models.fields.CharField(blank=True, max_length=255, verbose_name='CST - Tabela B', choices=[('00', '00 - Tributada integralmente'), ('10', '10 - Tributada e com cobran\xe7a do ICMS por substitui\xe7\xe3o tribut\xe1ria'), ('20', '20 - Com redu\xe7\xe3o de base de c\xe1lculo'), ('30', '30 - Isenta ou n\xe3o tributada e com cobran\xe7a do ICMS por substitui\xe7\xe3o tribut\xe1ria'), ('40', '40 - Isenta'), ('41', '41 - N\xe3o tributada'), ('50', '50 - Suspens\xe3o'), ('51', '51 - Diferimento'), ('50', '60 - ICMS cobrado anteriormente por substitui\xe7\xe3o tribut\xe1ria'), ('70', '70 - Com redu\xe7\xe3o de base de c\xe1lculo e cobran\xe7a do ICMS por substitui\xe7\xe3o tribut\xe1ria'), ('90', '90 - Outras')])),
                ('ativo', djangoplus.db.models.fields.BooleanField(default=True)),
                ('garantia', djangoplus.db.models.fields.DateField(null=True, verbose_name='Garantia do Fornecedor/Fabricante', blank=True)),
                ('garantia_cliente', djangoplus.db.models.fields.PositiveIntegerField(help_text='Em dias', null=True, verbose_name='Garantia para Cliente', blank=True)),
                ('aliquotaicms', djangoplus.db.models.fields.ModelChoiceField(verbose_name='ICMS', blank=True, to='soluti.AliquotaICMS', null=True)),
                ('aliquotaipi', djangoplus.db.models.fields.ModelChoiceField(verbose_name='IPI', blank=True, to='soluti.AliquotaIPI', null=True)),
                ('cfop', djangoplus.db.models.fields.ModelChoiceField(verbose_name='CFOP', blank=True, to='soluti.CFOP', null=True)),
                ('empresa', djangoplus.db.models.fields.MultipleModelChoiceField(help_text='Selecione uma ou mais empresas', to='soluti.Empresa')),
                ('fabricante', djangoplus.db.models.fields.ModelChoiceField(to='soluti.Fabricante', null=True)),
                ('fornecedor', djangoplus.db.models.fields.ModelChoiceField(blank=True, to='soluti.Fornecedor', null=True)),
            ],
            options={
                'unit_field': 'empresa',
                'ordering': ('titulo',),
                'menu': ('Estoque::Produtos', 'fa-bars'),
                'list_display': ['titulo', 'descricao', 'valor', 'preco_custo', 'get_margem_lucro', 'estoque_atual', 'ativo'],
                'verbose_name_plural': 'Produtos',
                'can_admin': ['Administrador'],
                'verbose_name': 'Produto',
            },
        ),
        migrations.CreateModel(
            name='PropostaVenda',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('data', djangoplus.db.models.fields.DateTimeField(default=datetime.datetime.today)),
                ('parcelas', djangoplus.db.models.fields.PositiveIntegerField()),
                ('vencimento', djangoplus.db.models.fields.DateField(verbose_name='Primeiro Vencimento')),
                ('vantagens', djangoplus.db.models.fields.TextField(blank=True)),
                ('status', djangoplus.db.models.fields.CharField(max_length=255, verbose_name='Status', choices=[('Aberta', 'Aberta'), ('Finalizada', 'Finalizada'), ('Cancelada', 'Cancelada')])),
                ('faturada', djangoplus.db.models.fields.BooleanField(default=False)),
                ('observacao', djangoplus.db.models.fields.TextField(null=True, verbose_name='Observa\xe7\xe3o', blank=True)),
            ],
            options={
                'unit_field': 'empresa',
                'ordering': ('data',),
                'menu': 'Vendas::Propostas de Vendassss',
                'list_display': ['data', 'status'],
                'verbose_name_plural': 'Propostas de Vendas',
                'can_admin': ['Administrador'],
                'verbose_name': 'Proposta de Venda',
            },
        ),
        migrations.CreateModel(
            name='PropostaVendaProduto',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('quantidade', djangoplus.db.models.fields.PositiveIntegerField()),
                ('valor', djangoplus.db.models.fields.DecimalField(verbose_name='Valor Total', max_digits=9, decimal_places=2)),
                ('produto', djangoplus.db.models.fields.ModelChoiceField(to='soluti.Produto')),
            ],
            options={
                'can_admin': ['Administrador'],
                'verbose_name': 'Produto',
                'list_display': ['produto', 'quantidade', 'valor'],
                'verbose_name_plural': 'Produtos',
            },
        ),
        migrations.CreateModel(
            name='PropostaVendaServico',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('valor', djangoplus.db.models.fields.DecimalField(verbose_name='Valor Total', max_digits=9, decimal_places=2)),
            ],
            options={
                'can_admin': ['Administrador'],
                'verbose_name': 'Servi\xe7o',
                'list_display': ['servico', 'valor'],
                'verbose_name_plural': 'Servi\xe7os',
            },
        ),
        migrations.CreateModel(
            name='Receita',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('categoria', djangoplus.db.models.fields.CharField(max_length=255, choices=[('Vendas', 'Vendas'), ('Servi\xe7os', 'Servi\xe7os')])),
                ('nota_fiscal', djangoplus.db.models.fields.CharField(max_length=255, verbose_name='N\xba Nota Fiscal', blank=True)),
                ('data', djangoplus.db.models.fields.DateField()),
                ('descricao', djangoplus.db.models.fields.TextField(verbose_name='Descri\xe7\xe3o')),
                ('valor', djangoplus.db.models.fields.DecimalField(max_digits=9, decimal_places=2)),
                ('confirmada', djangoplus.db.models.fields.BooleanField(default=True, verbose_name='Recebida')),
                ('cliente', djangoplus.db.models.fields.ModelChoiceField(blank=True, to='soluti.Cliente', null=True)),
                ('contrato', djangoplus.db.models.fields.ModelChoiceField(blank=True, to='soluti.Contrato', null=True)),
                ('empresa', djangoplus.db.models.fields.ModelChoiceField(to='soluti.Empresa')),
            ],
            options={
                'unit_field': 'empresa',
                'ordering': ('data',),
                'menu': 'Financeiro::Receitas',
                'list_display': ['data', 'categoria', 'valor', 'descricao', 'confirmada'],
                'verbose_name_plural': 'Receitas',
                'can_admin': ['Administrador', 'Gerente'],
                'verbose_name': 'Receita',
            },
        ),
        migrations.CreateModel(
            name='Regiao',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('descricao', djangoplus.db.models.fields.CharField(unique=True, max_length=255, verbose_name='Descri\xe7\xe3o')),
                ('cidade', djangoplus.db.models.fields.ModelChoiceField(to='soluti.Cidade')),
            ],
            options={
                'ordering': ('descricao',),
                'menu': 'Cadastros::Regi\xf5es',
                'can_admin': ['Administrador'],
                'verbose_name': 'Regi\xe3o',
                'verbose_name_plural': 'Regi\xf5es',
            },
        ),
        migrations.CreateModel(
            name='Revenda',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('nome', djangoplus.db.models.fields.CharField(max_length=255, verbose_name='Nome')),
                ('eh_pessoa_fisica', djangoplus.db.models.fields.BooleanField(default=False, verbose_name='\xc9 Pessoa F\xedsica?')),
                ('cpf', djangoplus.db.models.fields.CpfField(max_length=255, verbose_name='CPF', blank=True)),
                ('rg', djangoplus.db.models.fields.CharField(max_length=255, verbose_name='RG', blank=True)),
                ('nome_fantasia', djangoplus.db.models.fields.CharField(max_length=255, verbose_name='Nome Fantasia', blank=True)),
                ('cnpj', djangoplus.db.models.fields.CnpjField(max_length=255, verbose_name='CNPJ', blank=True)),
                ('inscricaoestadual', djangoplus.db.models.fields.CharField(max_length=8, verbose_name='Inscri\xe7\xe3o Estadual', blank=True)),
                ('isentoinscricaoestadual', djangoplus.db.models.fields.BooleanField(default=False, verbose_name='Isento de Inscri\xe7\xe3o Estadual')),
                ('inscricaomunicipal', djangoplus.db.models.fields.CharField(max_length=14, verbose_name='Inscri\xe7\xe3o Municipal', blank=True)),
                ('endereco', djangoplus.db.models.fields.AddressField(max_length=255, verbose_name='Endere\xe7o')),
                ('complemento', djangoplus.db.models.fields.CharField(max_length=255, verbose_name='Complemento')),
                ('pontoreferencia', djangoplus.db.models.fields.CharField(max_length=255, verbose_name='Ponto de Refer\xeancia')),
                ('bairro', djangoplus.db.models.fields.CharField(max_length=255, verbose_name='Bairro')),
                ('cep', djangoplus.db.models.fields.CepField(max_length=255, verbose_name='CEP')),
                ('telefone', djangoplus.db.models.fields.PhoneField(max_length=255, verbose_name='Telefone')),
                ('celular', djangoplus.db.models.fields.PhoneField9(max_length=255, null=True, verbose_name='Celular', blank=True)),
                ('email', djangoplus.db.models.fields.EmailField(max_length=255, verbose_name='E-mail')),
                ('ativo', djangoplus.db.models.fields.BooleanField(default=True, verbose_name='Ativo')),
                ('observacao', djangoplus.db.models.fields.TextField(null=True, verbose_name='Observa\xe7\xf5es', blank=True)),
                ('data_cadastro', djangoplus.db.models.fields.DateField(auto_now_add=True, verbose_name='Data de Cadastro')),
                ('cidade', djangoplus.db.models.fields.ModelChoiceField(to='soluti.Cidade')),
                ('empresa', djangoplus.db.models.fields.ModelChoiceField(to='soluti.Empresa')),
                ('estado', djangoplus.db.models.fields.ModelChoiceField(to='soluti.Estado')),
            ],
            options={
                'unit_field': 'empresa',
                'ordering': ('nome',),
                'menu': ('Administra\xe7\xe3o::Revendas', 'fa-cog'),
                'list_display': ['nome', 'ativo'],
                'verbose_name_plural': 'Revendas',
                'can_admin': ['Administrador'],
                'verbose_name': 'Revenda',
            },
        ),
        migrations.CreateModel(
            name='SaidaEstoque',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('quantidade', djangoplus.db.models.fields.PositiveIntegerField(verbose_name='Quantidade')),
                ('data_cadastro', djangoplus.db.models.fields.DateField(default=datetime.datetime.today, verbose_name='Data de Cadastro')),
                ('empresa', djangoplus.db.models.fields.ModelChoiceField(to='soluti.Empresa')),
                ('produto', djangoplus.db.models.fields.ModelChoiceField(to='soluti.Produto')),
            ],
            options={
                'unit_field': 'empresa',
                'ordering': ('data_cadastro',),
                'menu': 'Estoque::Sa\xeddas',
                'list_display': ['empresa', 'produto', 'quantidade', 'data_cadastro'],
                'verbose_name_plural': 'Sa\xeddas de Estoque',
                'can_admin': ['Administrador', 'Gerente'],
                'verbose_name': 'Sa\xedda de Estoque',
            },
        ),
        migrations.CreateModel(
            name='Servico',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('titulo', djangoplus.db.models.fields.CharField(unique=True, max_length=255, verbose_name='T\xedtulo')),
                ('descricao', djangoplus.db.models.fields.TextField(verbose_name='Descri\xe7\xe3o')),
                ('valor', djangoplus.db.models.fields.DecimalField(max_digits=9, decimal_places=2)),
                ('empresa', djangoplus.db.models.fields.MultipleModelChoiceField(help_text='Selecione uma ou mais empresas', to='soluti.Empresa')),
            ],
            options={
                'unit_field': 'empresa',
                'ordering': ('titulo',),
                'menu': 'Estoque::Servi\xe7os',
                'list_display': ['titulo', 'descricao', 'valor'],
                'verbose_name_plural': 'Servi\xe7os',
                'can_admin': ['Administrador'],
                'verbose_name': 'Servi\xe7o',
            },
        ),
        migrations.CreateModel(
            name='Setor',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('descricao', djangoplus.db.models.fields.CharField(unique=True, max_length=255, verbose_name='Descri\xe7\xe3o')),
            ],
            options={
                'ordering': ('descricao',),
                'menu': 'Recursos Humanos::Setores',
                'can_admin': ['Administrador'],
                'verbose_name': 'Setor',
                'verbose_name_plural': 'Setores',
            },
        ),
        migrations.CreateModel(
            name='SubGrupoProduto',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('descricao', djangoplus.db.models.fields.CharField(unique=True, max_length=255, verbose_name='Descri\xe7\xe3o')),
                ('grupo', djangoplus.db.models.fields.ModelChoiceField(to='soluti.GrupoProduto')),
            ],
            options={
                'ordering': ('descricao',),
                'menu': 'Estoque::Subgrupos de Produtos',
                'can_admin': ['Administrador'],
                'verbose_name': 'Subgrupo de Produtos',
                'verbose_name_plural': 'Subgrupos de Produtos',
            },
        ),
        migrations.CreateModel(
            name='SubRegiao',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('descricao', djangoplus.db.models.fields.CharField(unique=True, max_length=255, verbose_name='Descri\xe7\xe3o')),
                ('regiao', djangoplus.db.models.fields.ModelChoiceField(to='soluti.Regiao')),
            ],
            options={
                'ordering': ('descricao',),
                'menu': 'Cadastros::Sub-regi\xf5es',
                'can_admin': ['Administrador'],
                'verbose_name': 'Sub-regi\xe3o',
                'verbose_name_plural': 'Sub-regi\xf5es',
            },
        ),
        migrations.CreateModel(
            name='Suporte',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('nome', djangoplus.db.models.fields.CharField(max_length=255, verbose_name='Nome')),
                ('cpf', djangoplus.db.models.fields.CpfField(max_length=255, verbose_name='CPF')),
                ('empresa', djangoplus.db.models.fields.ModelChoiceField(to='soluti.Empresa')),
            ],
            options={
                'unit_field': 'empresa',
                'menu': 'Administra\xe7\xe3o::Usu\xe1rios::Suportes',
                'list_display': ['nome', 'cpf', 'empresa'],
                'verbose_name_plural': 'Suporte',
                'username_field': 'cpf',
                'can_admin': ['Administrador'],
                'verbose_name': 'Suporte',
            },
        ),
        migrations.CreateModel(
            name='Ticket',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('observacao', djangoplus.db.models.fields.TextField(verbose_name='Descri\xe7\xe3o', blank=True)),
                ('status', djangoplus.db.models.fields.CharField(max_length=255, choices=[('Aberto', 'Aberto'), ('Pendente', 'Pendente'), ('Finalizado', 'Finalizado'), ('Reaberto', 'Reaberto')])),
                ('tipo_interacao', djangoplus.db.models.fields.CharField(max_length=100, verbose_name='Tipo de Intera\xe7\xe3o', choices=[('Suporte', 'Suporte'), ('Assist\xeancia T\xe9cnica', 'Assist\xeancia T\xe9cnica')])),
                ('data', djangoplus.db.models.fields.DateField(auto_now_add=True, verbose_name='Data de Cadastro')),
                ('cliente', djangoplus.db.models.fields.ModelChoiceField(help_text='Somente ser\xe3o listados clientes ativos.', to='soluti.Cliente')),
                ('responsaveis', djangoplus.db.models.fields.MultipleModelChoiceField(help_text='Selecione um ou mais respons\xe1veis', to='soluti.Suporte', verbose_name='Respons\xe1veis')),
            ],
            options={
                'ordering': ('data',),
                'menu': ('Assist\xeancia T\xe9cnica::Tickets', 'fa-question-circle'),
                'list_display': ['id', 'cliente', 'observacao', 'tipo_interacao', 'responsaveis', 'status'],
                'can_list': ['Atendente', 'Vendedor'],
                'verbose_name_plural': 'Tickets',
                'can_admin': ['Administrador', 'Gerente'],
                'verbose_name': 'Ticket',
            },
        ),
        migrations.CreateModel(
            name='TipoEstoque',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('descricao', djangoplus.db.models.fields.CharField(max_length=255, verbose_name='Descri\xe7\xe3o')),
                ('empresa', djangoplus.db.models.fields.ModelChoiceField(to='soluti.Empresa')),
            ],
            options={
                'ordering': ['descricao'],
                'menu': 'Estoque::Tipos de Estoque',
                'verbose_name': 'Tipo de Estoque',
                'verbose_name_plural': 'Tipos de Estoque',
            },
        ),
        migrations.CreateModel(
            name='Transportadora',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('nome', djangoplus.db.models.fields.CharField(unique=True, max_length=255, verbose_name='Nome')),
            ],
            options={
                'ordering': ('nome',),
                'menu': 'Cadastros::Transportadoras',
                'can_admin': ['Administrador'],
                'verbose_name': 'Transportadora',
                'verbose_name_plural': 'Transportadoras',
            },
        ),
        migrations.CreateModel(
            name='UnidadeMedida',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('descricao', djangoplus.db.models.fields.CharField(max_length=255, verbose_name='Descri\xe7\xe3o')),
                ('representacao', djangoplus.db.models.fields.CharField(max_length=255, verbose_name='Representa\xe7\xe3o da Unidade')),
            ],
            options={
                'ordering': ['descricao', 'representacao'],
                'menu': 'Estoque::Unidades de Medida',
                'verbose_name': 'Unidade de Medida',
                'verbose_name_plural': 'Unidades de Medidas',
            },
        ),
        migrations.CreateModel(
            name='Vendedor',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('nome', djangoplus.db.models.fields.CharField(max_length=255, verbose_name='Nome')),
                ('cpf', djangoplus.db.models.fields.CpfField(max_length=255, verbose_name='CPF')),
                ('empresa', djangoplus.db.models.fields.ModelChoiceField(to='soluti.Empresa')),
            ],
            options={
                'unit_field': 'empresa',
                'menu': 'Vendas::Vendedores',
                'list_display': ['nome', 'cpf', 'empresa'],
                'verbose_name_plural': 'Vendedores',
                'username_field': 'cpf',
                'can_admin': ['Administrador'],
                'verbose_name': 'Vendedor',
            },
        ),
        migrations.CreateModel(
            name='VisitaCliente',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('dias_semana', djangoplus.db.models.fields.CharField(max_length=100, verbose_name='Dias da Semana', choices=[('Segunda', 'Segunda'), ('Ter\xe7a', 'Ter\xe7a'), ('Quarta', 'Quarta'), ('Quinta', 'Quinta'), ('Sexta', 'Sexta')])),
                ('horario', djangoplus.db.models.fields.CharField(max_length=100, verbose_name='Hor\xe1rio', choices=[('Entre 9 e 10h', 'Entre 9 e 10h'), ('Entre 10 e 11h', 'Entre 10 e 11h'), ('Entre 11 e 12h', 'Entre 11 e 12h'), ('Entre 13 e 14h', 'Entre 13 e 14h'), ('Entre 14 e 15h', 'Entre 14 e 15h'), ('Entre 15 e 16h', 'Entre 15 e 16h')])),
                ('observacao', djangoplus.db.models.fields.TextField(verbose_name='Observa\xe7\xf5es', blank=True)),
                ('cliente', djangoplus.db.models.fields.ModelChoiceField(to='soluti.Cliente')),
            ],
            options={
                'can_admin': ['Administrador', 'Gerente'],
                'verbose_name': 'Visita ao Cliente',
                'can_list': ['Atendente'],
                'verbose_name_plural': 'Visitas ao Cliente',
            },
        ),
        migrations.CreateModel(
            name='PropostaVendaCliente',
            fields=[
                ('propostavenda_ptr', models.OneToOneField(parent_link=True, auto_created=True, primary_key=True, serialize=False, to='soluti.PropostaVenda')),
            ],
            options={
                'can_admin': ['Administrador'],
                'verbose_name': 'Proposta de Venda ao Cliente',
                'verbose_name_plural': 'Propostas de Vendas ao Cliente',
            },
            bases=('soluti.propostavenda',),
        ),
        migrations.CreateModel(
            name='PropostaVendaLead',
            fields=[
                ('propostavenda_ptr', models.OneToOneField(parent_link=True, auto_created=True, primary_key=True, serialize=False, to='soluti.PropostaVenda')),
            ],
            options={
                'menu': 'Vendas::Propostas de Vendas para Leads',
                'can_admin': ['Administrador'],
                'verbose_name': 'Proposta de Venda ao Lead',
                'verbose_name_plural': 'Propostas de Vendas ao Lead',
            },
            bases=('soluti.propostavenda',),
        ),
        migrations.AddField(
            model_name='receita',
            name='propostavenda',
            field=djangoplus.db.models.fields.ModelChoiceField(blank=True, to='soluti.PropostaVenda', null=True),
        ),
        migrations.AddField(
            model_name='propostavendaservico',
            name='proposta_venda',
            field=djangoplus.db.models.fields.ModelChoiceField(to='soluti.PropostaVenda'),
        ),
        migrations.AddField(
            model_name='propostavendaservico',
            name='servico',
            field=djangoplus.db.models.fields.ModelChoiceField(verbose_name='Servi\xe7o', to='soluti.Servico'),
        ),
        migrations.AddField(
            model_name='propostavendaproduto',
            name='proposta_venda',
            field=djangoplus.db.models.fields.ModelChoiceField(to='soluti.PropostaVenda'),
        ),
        migrations.AddField(
            model_name='propostavenda',
            name='empresa',
            field=djangoplus.db.models.fields.ModelChoiceField(to='soluti.Empresa'),
        ),
        migrations.AddField(
            model_name='propostavenda',
            name='forma_pagamento',
            field=djangoplus.db.models.fields.ModelChoiceField(verbose_name='Forma de Pagamento', to='soluti.FormaPagamento'),
        ),
        migrations.AddField(
            model_name='propostavenda',
            name='vendedor',
            field=djangoplus.db.models.fields.ModelChoiceField(to='soluti.Vendedor'),
        ),
        migrations.AddField(
            model_name='produto',
            name='tipoestoque',
            field=djangoplus.db.models.fields.ModelChoiceField(to='soluti.TipoEstoque'),
        ),
        migrations.AddField(
            model_name='produto',
            name='unidade',
            field=djangoplus.db.models.fields.ModelChoiceField(to='soluti.UnidadeMedida'),
        ),
        migrations.AddField(
            model_name='lead',
            name='interesse',
            field=djangoplus.db.models.fields.MultipleModelChoiceField(help_text='Produto ou servi\xe7o de interesse', to='soluti.Produto'),
        ),
        migrations.AddField(
            model_name='lead',
            name='vendedor',
            field=djangoplus.db.models.fields.ModelChoiceField(to='soluti.Vendedor'),
        ),
        migrations.AddField(
            model_name='interacaoticket',
            name='responsavel',
            field=djangoplus.db.models.fields.ModelChoiceField(verbose_name='Respons\xe1vel', to='soluti.Suporte'),
        ),
        migrations.AddField(
            model_name='interacaoticket',
            name='ticket',
            field=djangoplus.db.models.fields.ModelChoiceField(to='soluti.Ticket'),
        ),
        migrations.AddField(
            model_name='fornecedor',
            name='regiao',
            field=djangoplus.db.models.fields.ModelChoiceField(verbose_name=b'Regi\xc3\xa3o', to='soluti.Regiao'),
        ),
        migrations.AddField(
            model_name='fornecedor',
            name='subregiao',
            field=djangoplus.db.models.fields.ModelChoiceField(verbose_name=b'Sub-regi\xc3\xa3o', to='soluti.SubRegiao'),
        ),
        migrations.AddField(
            model_name='entradaestoque',
            name='produto',
            field=djangoplus.db.models.fields.ModelChoiceField(to='soluti.Produto'),
        ),
        migrations.AddField(
            model_name='empresa',
            name='estado',
            field=djangoplus.db.models.fields.ModelChoiceField(to='soluti.Estado'),
        ),
        migrations.AddField(
            model_name='despesa',
            name='empresa',
            field=djangoplus.db.models.fields.ModelChoiceField(to='soluti.Empresa'),
        ),
        migrations.AddField(
            model_name='controlesatisfacao',
            name='ticket',
            field=djangoplus.db.models.fields.ModelChoiceField(to='soluti.Ticket'),
        ),
        migrations.AddField(
            model_name='contratoservico',
            name='servico',
            field=djangoplus.db.models.fields.ModelChoiceField(verbose_name='Servi\xe7o', to='soluti.Servico'),
        ),
        migrations.AddField(
            model_name='contrato',
            name='forma_pagamento',
            field=djangoplus.db.models.fields.ModelChoiceField(verbose_name='Forma de Pagamento', to='soluti.FormaPagamento'),
        ),
        migrations.AddField(
            model_name='contrato',
            name='responsavel',
            field=djangoplus.db.models.fields.ModelChoiceField(verbose_name='Respons\xe1vel', to='soluti.Vendedor'),
        ),
        migrations.AddField(
            model_name='contatocliente',
            name='setor',
            field=djangoplus.db.models.fields.ModelChoiceField(to='soluti.Setor'),
        ),
        migrations.AddField(
            model_name='compraproduto',
            name='produto',
            field=djangoplus.db.models.fields.ModelChoiceField(to='soluti.Produto'),
        ),
        migrations.AddField(
            model_name='compra',
            name='empresa',
            field=djangoplus.db.models.fields.ModelChoiceField(to='soluti.Empresa'),
        ),
        migrations.AddField(
            model_name='compra',
            name='forma_pagamento',
            field=djangoplus.db.models.fields.ModelChoiceField(verbose_name='Forma de Pagamento', to='soluti.FormaPagamento'),
        ),
        migrations.AddField(
            model_name='compra',
            name='fornecedor',
            field=djangoplus.db.models.fields.ModelChoiceField(to='soluti.Fornecedor'),
        ),
        migrations.AddField(
            model_name='colaborador',
            name='empresa',
            field=djangoplus.db.models.fields.MultipleModelChoiceField(help_text='Selecione uma ou mais empresas', to='soluti.Empresa'),
        ),
        migrations.AddField(
            model_name='colaborador',
            name='estado',
            field=djangoplus.db.models.fields.ModelChoiceField(to='soluti.Estado'),
        ),
        migrations.AddField(
            model_name='colaborador',
            name='estado_ctps',
            field=djangoplus.db.models.fields.ModelChoiceField(related_name='estado_ctps', verbose_name='Estado CTPS', to='soluti.Estado'),
        ),
        migrations.AddField(
            model_name='colaborador',
            name='estado_eleitoral',
            field=djangoplus.db.models.fields.ModelChoiceField(related_name='estado_eleitoral', verbose_name='Estado Eleitoral', to='soluti.Estado'),
        ),
        migrations.AddField(
            model_name='clienterevenda',
            name='revenda',
            field=djangoplus.db.models.fields.ModelChoiceField(to='soluti.Revenda'),
        ),
        migrations.AddField(
            model_name='cliente',
            name='empresa_conveniada',
            field=djangoplus.db.models.fields.ModelChoiceField(blank=True, to='soluti.EmpresaConveniada', null=True),
        ),
        migrations.AddField(
            model_name='cliente',
            name='estado',
            field=djangoplus.db.models.fields.ModelChoiceField(related_name='estado_cliente', to='soluti.Estado'),
        ),
        migrations.AddField(
            model_name='cliente',
            name='estado_cobranca',
            field=djangoplus.db.models.fields.ModelChoiceField(related_name='estado_cobranca', verbose_name='Estado', blank=True, to='soluti.Estado', null=True),
        ),
        migrations.AddField(
            model_name='cliente',
            name='estado_entrega',
            field=djangoplus.db.models.fields.ModelChoiceField(related_name='estado_entrega', verbose_name='Estado', blank=True, to='soluti.Estado', null=True),
        ),
        migrations.AddField(
            model_name='cliente',
            name='forma_pagamento',
            field=djangoplus.db.models.fields.ModelChoiceField(verbose_name='Forma de Pagamento', to='soluti.FormaPagamento', null=True),
        ),
        migrations.AddField(
            model_name='cliente',
            name='grupoeconomico',
            field=djangoplus.db.models.fields.ModelChoiceField(verbose_name='Grupo Econ\xf4mico', blank=True, to='soluti.GrupoEconomico', null=True),
        ),
        migrations.AddField(
            model_name='cliente',
            name='regiao',
            field=djangoplus.db.models.fields.ModelChoiceField(verbose_name='Regi\xe3o', to='soluti.Regiao'),
        ),
        migrations.AddField(
            model_name='cliente',
            name='subregiao',
            field=djangoplus.db.models.fields.ModelChoiceField(verbose_name='Sub-regi\xe3o', to='soluti.SubRegiao', null=True),
        ),
        migrations.AddField(
            model_name='cliente',
            name='transportadora',
            field=djangoplus.db.models.fields.ModelChoiceField(blank=True, to='soluti.Transportadora', null=True),
        ),
        migrations.AddField(
            model_name='cliente',
            name='vendedor',
            field=djangoplus.db.models.fields.ModelChoiceField(to='soluti.Vendedor'),
        ),
        migrations.AddField(
            model_name='cidade',
            name='estado',
            field=djangoplus.db.models.fields.ModelChoiceField(to='soluti.Estado'),
        ),
        migrations.AddField(
            model_name='atendente',
            name='empresa',
            field=djangoplus.db.models.fields.ModelChoiceField(to='soluti.Empresa'),
        ),
        migrations.AddField(
            model_name='anexocliente',
            name='cliente',
            field=djangoplus.db.models.fields.ModelChoiceField(to='soluti.Cliente'),
        ),
        migrations.AddField(
            model_name='alertalead',
            name='lead',
            field=djangoplus.db.models.fields.ModelChoiceField(to='soluti.Lead'),
        ),
        migrations.AddField(
            model_name='alertalead',
            name='motivo',
            field=djangoplus.db.models.fields.ModelChoiceField(to='soluti.MotivoAlertaLead'),
        ),
        migrations.AddField(
            model_name='administrativo',
            name='empresa',
            field=djangoplus.db.models.fields.ModelChoiceField(to='soluti.Empresa'),
        ),
        migrations.AddField(
            model_name='administrador',
            name='empresa',
            field=djangoplus.db.models.fields.ModelChoiceField(to='soluti.Empresa'),
        ),
        migrations.AddField(
            model_name='propostavendalead',
            name='cadastro',
            field=djangoplus.db.models.fields.ModelChoiceField(blank=True, to='soluti.Lead', null=True),
        ),
        migrations.AddField(
            model_name='propostavendacliente',
            name='cadastro',
            field=djangoplus.db.models.fields.ModelChoiceField(blank=True, to='soluti.Cliente', null=True),
        ),
    ]
